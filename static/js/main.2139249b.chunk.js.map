{"version":3,"sources":["AddTicket.tsx","List.tsx","AuthedApp.tsx","Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddTicket","user","onAdd","useState","title","setTitle","number","setNumber","content","setContent","validated","setValidated","error","setError","step","setStep","add","ticket","a","octokit","request","description","files","TICKET_FILENAME","JSON","stringify","public","response","id","data","Form","noValidate","onSubmit","event","preventDefault","length","Accordion","className","activeKey","onSelect","eventKey","undefined","Item","Header","Body","Control","type","value","onChange","target","required","min","val","parseInt","isNaN","as","Alert","variant","Button","List","tickets","onDelete","ListGroup","map","onClick","split","line","index","Fragment","AuthedApp","view","setView","setTickets","msg","setMsg","useEffect","unfiltered_list","list","filter","gist","filenames","Object","keys","node_id_to_gist_id","Map","node_id","graphql","node_ids","nodes","flatMap","parsed","file","name","text","parse","err","get","fetchTickets","gist_id","Modal","show","onHide","size","closeButton","Title","Login","onLogin","username","setUsername","token","setToken","currentTarget","checkValidity","Octokit","auth","login","headers","includes","status","message","Group","controlId","Label","App","key","initialState","storage","localStorage","useStateResult","item","getItem","setItem","removeItem","useStorage","credentials","setCredentials","Navbar","bg","expand","Container","Brand","Toggle","Collapse","Text","Nav","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2139249b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Accordion, Alert, Button, Form } from 'react-bootstrap';\nimport { Ticket, User } from './App';\nimport { TICKET_FILENAME } from './AuthedApp';\n\ninterface AddTicketProps {\n    user: User;\n    onAdd: (ticket: Ticket) => void;\n}\n\nconst AddTicket = ({ user, onAdd }: AddTicketProps) => {\n    const [title, setTitle] = useState('');\n    const [number, setNumber] = useState<number | null>(null);\n    const [content, setContent] = useState('');\n    const [validated, setValidated] = useState(false);\n    const [error, setError] = useState(false);\n\n    type Step = 'title' | 'number' | 'content' | undefined;\n    const [step, setStep] = useState<Step>('title');\n\n    const add = async (ticket: Omit<Ticket, 'id'>) => {\n        try {\n            const response = await user.octokit.request('POST /gists', {\n                description: ticket.title,\n                files: {\n                    [TICKET_FILENAME]: { content: JSON.stringify({ number: ticket.number, content: ticket.content }) },\n                },\n                public: false,\n            });\n            onAdd({ ...ticket, id: response.data.id! });\n        } catch (error) {\n            setError(true);\n        }\n    };\n\n    return <Form noValidate validated={validated} onSubmit={event => {\n        event.preventDefault();\n        if (title.length === 0) {\n            setStep('title');\n            setValidated(true);\n        } else if (number === null || number < 1) {\n            setStep('number');\n            setValidated(true);\n        } else if (content.length === 0) {\n            setStep('content');\n            setValidated(true);\n        } else {\n            add({ title, number, content });\n        }\n    }}>\n        <Accordion className=\"mb-3\" activeKey={step} onSelect={eventKey => setStep((eventKey ?? undefined) as Step)}>\n            <Accordion.Item eventKey=\"title\">\n                <Accordion.Header id=\"AddTicket-title-label\">Tytuł</Accordion.Header>\n                <Accordion.Body>\n                    <Form.Control\n                        type=\"text\"\n                        value={title}\n                        onChange={event => setTitle(event.target.value)}\n                        required\n                        aria-labelledby=\"AddTicket-title-label\"\n                    />\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"number\">\n                <Accordion.Header id=\"AddTicket-number-label\">Numer</Accordion.Header>\n                <Accordion.Body>\n                    <Form.Control\n                        type=\"number\"\n                        value={number ?? ''}\n                        min={1}\n                        onChange={event => {\n                            const val = parseInt(event.target.value, 10);\n                            setNumber(isNaN(val) ? null : val);\n                        }}\n                        required\n                        aria-labelledby=\"AddTicket-number-label\"\n                    />\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"content\">\n                <Accordion.Header id=\"AddTicket-content-label\">Treść</Accordion.Header>\n                <Accordion.Body>\n                    <Form.Control\n                        as=\"textarea\"\n                        className=\"AddTicket-content-textarea\"\n                        value={content}\n                        onChange={event => setContent(event.target.value)}\n                        required\n                        aria-labelledby=\"AddTicket-content-label\"\n                    />\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n        {error && <Alert variant=\"danger\">Wystąpił błąd.</Alert>}\n        <div className=\"text-center\">\n            <Button type=\"submit\">Utwórz</Button>\n        </div>\n    </Form>\n}\n\nexport default AddTicket;","import React from 'react';\nimport { Button, ListGroup } from 'react-bootstrap';\nimport { GoTrashcan } from \"react-icons/go\";\nimport { Ticket } from './App';\n\ninterface ListProps {\n    tickets: Ticket[];\n    onDelete: (id: string) => void;\n}\n\nconst List = ({ tickets, onDelete }: ListProps) => {\n    return <ListGroup>\n        {tickets.map(ticket => <ListGroup.Item key={ticket.id} className=\"List-item\">\n            <div className=\"List-item-header\">\n                <h3>{ticket.title} <span className=\"List-item-number\">#{ticket.number}</span></h3>\n                <Button onClick={() => onDelete(ticket.id)} variant=\"outline-dark\" aria-label=\"Usuń\" className=\"List-item-delete\">\n                    <GoTrashcan />\n                </Button>\n            </div>\n            {ticket.content.split('\\n').map((line, index) => (\n                <React.Fragment key={index}>{line}<br /></React.Fragment>\n            ))}\n        </ListGroup.Item>)}\n    </ListGroup>;\n}\n\nexport default List;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport { Alert, Button, Modal } from 'react-bootstrap';\nimport AddTicket from './AddTicket';\nimport { User } from './App';\nimport './App.css';\nimport List from './List';\n\nexport interface Ticket {\n    title: string;\n    number: number;\n    content: string;\n    id: string;\n}\n\ninterface AuthedAppProps {\n    user: User;\n}\n\nexport const TICKET_FILENAME = 'ticket.json';\n\nconst AuthedApp = ({ user }: AuthedAppProps) => {\n    const [view, setView] = useState<'list' | 'add'>('list');\n    const [tickets, setTickets] = useState<Ticket[]>([]);\n    const [msg, setMsg] = useState<'added' | 'deleted' | 'error' | null>(null);\n\n    const { octokit } = user;\n\n    useEffect(() => {\n        const fetchTickets = async () => {\n            // Use graphql to fetch all files in one request.\n            // Unfortunately right now the graphql API does not support deleting gists\n            // and the REST API needs gist_id rather than node_id.\n            // Use the REST API to obtain gist_id.\n            try {\n                const unfiltered_list = await octokit.request('GET /gists');\n\n                const list = unfiltered_list.data.filter(gist => {\n                    const filenames = Object.keys(gist.files);\n                    return filenames.length === 1 && filenames[0] === TICKET_FILENAME;\n                });\n\n                const node_id_to_gist_id = new Map(list.map(gist => [gist.node_id, gist.id]));\n\n                const { nodes } = await octokit.graphql(`\n                    query gists($node_ids: [ID!]!){\n                        nodes(ids: $node_ids) {\n                            ... on Gist {\n                                id\n                                description\n                                files (limit: 1) {\n                                    name\n                                    text\n                                }\n                            }\n                        }\n                    }\n                `, {\n                    node_ids: list.map(gist => gist.node_id)\n                });\n                setTickets(nodes.flatMap((gist: any) => {\n                    const file = gist?.files?.[0];\n                    if (typeof gist?.description !== 'string') return [];\n                    if (file?.name !== TICKET_FILENAME || typeof file?.text !== 'string') return [];\n                    let parsed;\n                    try {\n                        parsed = JSON.parse(file.text)\n                    } catch (err) {\n                        return [];\n                    }\n                    if (typeof parsed?.number !== 'number' || typeof parsed?.content !== 'string') return [];\n                    return [{\n                        title: gist.description,\n                        number: parsed.number,\n                        content: parsed.content,\n                        id: node_id_to_gist_id.get(gist.id),\n                    }];\n                }));\n            } catch (error) {\n                setMsg('error');\n            }\n        };\n        fetchTickets();\n    }, [octokit]);\n\n    return <div>\n        {msg === 'added' && <Alert variant=\"success\">Dodano ticket.</Alert>}\n        {msg === 'deleted' && <Alert variant=\"info\">Usunięto ticket.</Alert>}\n        {msg === 'error' && <Alert variant=\"danger\">Wystąpił błąd.</Alert>}\n        <div className=\"mb-3\">\n            <Button onClick={() => setView('add')}>Utwórz</Button>\n        </div>\n        <List tickets={tickets} onDelete={async id => {\n            try {\n                await octokit.request('DELETE /gists/{gist_id}', {\n                    gist_id: id,\n                })\n                setTickets(tickets.filter(ticket => ticket.id !== id));\n                setMsg('deleted');\n            } catch (error) {\n                setMsg('error')\n            }\n        }} />\n        {/* Looks like there is a bug in Modal type definition\n            Probably Element instead of Element[] somewhere\n        // @ts-ignore */}\n        <Modal show={view === 'add'} onHide={() => setView('list')} size=\"lg\">\n            <Modal.Header closeButton>\n                <Modal.Title>Utwórz ticket</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <AddTicket user={user} onAdd={ticket => {\n                    setTickets([ticket, ...tickets])\n                    setView('list');\n                    setMsg('added');\n                }} />\n            </Modal.Body>\n        </Modal>\n    </div>;\n}\n\nexport default AuthedApp;\n","import { Octokit } from '@octokit/core';\nimport { useState } from 'react';\nimport { Alert, Button, Form } from 'react-bootstrap';\n\ninterface LoginProps {\n    onLogin: (username: string, token: string) => void;\n}\n\nconst Login = ({ onLogin }: LoginProps) => {\n    const [username, setUsername] = useState('');\n    const [token, setToken] = useState('');\n    const [validated, setValidated] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    return <div className=\"Login\">\n        <Form noValidate validated={validated} onSubmit={async event => {\n            event.preventDefault();\n            if (!event.currentTarget.checkValidity()) {\n                setValidated(true);\n                return;\n            }\n            try {\n                const octokit = new Octokit({ auth: token });\n                const response = await octokit.request('GET /user');\n                setValidated(false);\n                if (username !== response.data.login) {\n                    setError('Nieprawidłowe dane logowania.');\n                } else if (!response.headers['x-oauth-scopes']?.split(', ').includes('gist')) {\n                    setError('Token nie ma uprawnienia \"gist\".');\n                } else {\n                    onLogin(response.data.login, token);\n                }\n            } catch (error) {\n                setValidated(false);\n                if (error.status === 401) {\n                    setError('Nieprawidłowe dane logowania.');\n                } else if (error.status === 500) {\n                    setError('Nieudane połączenie z serwerem.');\n                } else {\n                    setError(`Wystąpił błąd. (${error.status} ${error.message})`);\n                }\n            }\n        }}>\n            <Form.Group className=\"mb-3\" controlId=\"Login-username\">\n                <Form.Label>Nazwa użytkownika</Form.Label>\n                <Form.Control type=\"text\" value={username} onChange={event => setUsername(event.target.value)} required />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"Login-token\">\n                <Form.Label>Klucz API</Form.Label>\n                <Form.Control type=\"password\" value={token} onChange={event => setToken(event.target.value)} required />\n            </Form.Group>\n            {error !== null && <Alert variant=\"danger\">\n                {error}\n            </Alert>}\n            <div className=\"text-center\">\n                <Button variant=\"primary\" type=\"submit\">Zaloguj</Button>\n            </div>\n        </Form>\n    </div>;\n};\n\nexport default Login;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { Octokit } from '@octokit/core';\nimport { useEffect, useState } from 'react';\nimport { Container, Nav, Navbar } from 'react-bootstrap';\nimport './App.css';\nimport AuthedApp from './AuthedApp';\nimport Login from './Login';\n\nexport interface Ticket {\n    title: string;\n    number: number;\n    content: string;\n    id: string;\n}\n\nexport interface User {\n    name: string;\n    octokit: Octokit;\n}\n\nexport interface Credentials {\n    name: string;\n    token: string;\n}\n\n/**\n * null removes the record\n */\nconst useStorage = <T,>(key: string, initialState: T | null, storage: Storage = localStorage) => {\n    const useStateResult = useState<T | null>(() => {\n        const item = storage.getItem(key);\n        if (item !== null) return JSON.parse(item);\n        return initialState;\n    });\n    const [value] = useStateResult;\n\n    useEffect(() => {\n        if (value !== null) {\n            storage.setItem(key, JSON.stringify(value));\n        } else {\n            storage.removeItem(key);\n        }\n    }, [key, value, storage]);\n\n    return useStateResult;\n}\n\nconst App = () => {\n    const [credentials, setCredentials] = useStorage<Credentials>('credentials', null);\n\n    return <div className=\"App-wrapper\">\n        <div className=\"App\">\n            <Navbar variant=\"light\" bg=\"light\" expand=\"sm\" className=\"mb-3\">\n                <Container>\n                    <Navbar.Brand>Tickety</Navbar.Brand>\n                    {credentials !== null && <>\n                        <Navbar.Toggle />\n                        <Navbar.Collapse className=\"justify-content-end\">\n                            <Navbar.Text>Użytkownik: {credentials.name}</Navbar.Text>\n                            <Nav>\n                                <Nav.Link onClick={() => setCredentials(null)}>Wyloguj</Nav.Link>\n                            </Nav>\n                        </Navbar.Collapse>\n                    </>}\n                </Container>\n            </Navbar>\n            {credentials !== null\n                ? <AuthedApp user={{ name: credentials.name, octokit: new Octokit({ auth: credentials.token }) }} />\n                : <Login onLogin={(name, token) => {\n                    setCredentials({ name, token });\n                }} />\n            }\n        </div>\n    </div>;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}